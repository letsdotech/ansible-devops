---
- name: Provision EC2 and Install Web Server
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    region: eu-central-1
    instance_type: t2.micro
    image: ami-0a628e1e89aaedf80  # Ubuntu 24.04
    key_name: ldtkeypair
    security_group: sg-42f33f3a
    subnet_id: subnet-87e02dcb
  tasks:
    - name: Gather information about existing instances
      amazon.aws.ec2_instance_info:
        filters:
          "tag:MyKey": "MyValue"  # Adjust according to your tagging strategy
      register: existing_instances

    - name: Provision EC2 instance
      amazon.aws.ec2_instance:
        instance_type: "{{ instance_type }}"
        image_id: "{{ image }}"
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        security_groups:
          - "{{ security_group }}"
        vpc_subnet_id: "{{ subnet_id }}"
        wait: true
        state: present
        count: "{{ 3 if existing_instances.instances | length == 0 else 0 }}"
        network:
          assign_public_ip: true
        tags:
          MyKey: "MyValue"
      register: ec2

    - name: Add new instance to host group
      ansible.builtin.add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: webserver
        ansible_host: "{{ item.public_ip_address }}"
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      ansible.builtin.wait_for:
        host: "{{ item.public_ip_address }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      loop: "{{ ec2.instances }}"

- name: Configure Web Server
  hosts: webserver
  become: true
  remote_user: ubuntu
  tasks:
    - name: Install Apache
      ansible.builtin.apt:
        name: apache2
        state: present
        update_cache: true

    - name: Start Apache service
      ansible.builtin.service:
        name: apache2
        state: started
        enabled: true

    - name: Create index.html
      ansible.builtin.copy:
        content: "<html><body><h1>Hello from Ansible-configured EC2!</h1></body></html>"
        dest: /var/www/html/index.html
        mode: '0644'

- name: Test Connectivity
  hosts: localhost
  connection: local
  # vars:
  #   webserver_ip: "{{ hostvars[groups['webserver'][0]]['ansible_host'] }}"
  tasks:
    - name: Check web server connectivity
      ansible.builtin.uri:
        # url: "http://{{ webserver_ip }}"
        url: "http://{{ hostvars[item]['ansible_host'] }}"
        return_content: true
      loop: "{{ groups['webserver'] }}"
      register: webpages

    - name: Display web page content for all instances
      ansible.builtin.debug:
        msg: "Content from {{ hostvars[item.item]['ansible_host'] }}: {{ item.content }}"
      loop: "{{ webpages.results }}"
      when: item.status == 200

    # - name: Display web page content
    #   ansible.builtin.debug:
    #     var: webpage.content
